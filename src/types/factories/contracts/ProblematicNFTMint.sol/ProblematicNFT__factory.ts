/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProblematicNFT,
  ProblematicNFTInterface,
} from "../../../contracts/ProblematicNFTMint.sol/ProblematicNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensDeposited",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600681526510985913919560d21b60208083019182528351808501909452600384526210905160ea1b9084015281519192916200005b916000916200007f565b508051620000719060019060208401906200007f565b505060006007555062000161565b8280546200008d9062000125565b90600052602060002090601f016020900481019282620000b15760008555620000fc565b82601f10620000cc57805160ff1916838001178555620000fc565b82800160010185558215620000fc579182015b82811115620000fc578251825591602001919060010190620000df565b506200010a9291506200010e565b5090565b5b808211156200010a57600081556001016200010f565b600181811c908216806200013a57607f821691505b6020821081036200015b57634e487b7160e01b600052602260045260246000fd5b50919050565b61174480620001716000396000f3fe60806040526004361061010d5760003560e01c80636352211e116100a5578063a22cb46511610074578063c87b56dd11610059578063c87b56dd146102fe578063d0e30db01461031e578063e985e9c51461032657600080fd5b8063a22cb465146102be578063b88d4fde146102de57600080fd5b80636352211e1461023c57806370a082311461025c57806395d89b411461027c578063a161c2051461029157600080fd5b8063095ea7b3116100e1578063095ea7b3146101c55780631249c58b146101e757806323b872dd146101fc57806342842e0e1461021c57600080fd5b80629a9b7b1461011257806301ffc9a71461013b57806306fdde031461016b578063081812fc1461018d575b600080fd5b34801561011e57600080fd5b5061012860075481565b6040519081526020015b60405180910390f35b34801561014757600080fd5b5061015b610156366004611324565b61036f565b6040519015158152602001610132565b34801561017757600080fd5b506101806103c1565b6040516101329190611399565b34801561019957600080fd5b506101ad6101a83660046113ac565b610453565b6040516001600160a01b039091168152602001610132565b3480156101d157600080fd5b506101e56101e03660046113e1565b6104ed565b005b3480156101f357600080fd5b506101e5610602565b34801561020857600080fd5b506101e561021736600461140b565b61066b565b34801561022857600080fd5b506101e561023736600461140b565b6106f2565b34801561024857600080fd5b506101ad6102573660046113ac565b61070d565b34801561026857600080fd5b50610128610277366004611447565b610798565b34801561028857600080fd5b50610180610832565b34801561029d57600080fd5b506101286102ac366004611447565b60066020526000908152604090205481565b3480156102ca57600080fd5b506101e56102d9366004611462565b610841565b3480156102ea57600080fd5b506101e56102f93660046114b4565b610850565b34801561030a57600080fd5b506101806103193660046113ac565b6108de565b6101e56109d4565b34801561033257600080fd5b5061015b610341366004611590565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806103a057506001600160e01b03198216635b5e139f60e01b145b806103bb57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103d0906115c3565b80601f01602080910402602001604051908101604052809291908181526020018280546103fc906115c3565b80156104495780601f1061041e57610100808354040283529160200191610449565b820191906000526020600020905b81548152906001019060200180831161042c57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104d15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006104f88261070d565b9050806001600160a01b0316836001600160a01b0316036105655760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016104c8565b336001600160a01b038216148061058157506105818133610341565b6105f35760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104c8565b6105fd8383610a40565b505050565b3360008181526006602052604080822054905181156108fc0292818181858888f19350505050158015610639573d6000803e3d6000fd5b506007805461065991339190600061065083611613565b91905055610abb565b33600090815260066020526040812055565b6106753382610ad5565b6106e75760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104c8565b6105fd838383610bcc565b6105fd83838360405180602001604052806000815250610850565b6000818152600260205260408120546001600160a01b0316806103bb5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016104c8565b60006001600160a01b0382166108165760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016104c8565b506001600160a01b031660009081526003602052604090205490565b6060600180546103d0906115c3565b61084c338383610d8d565b5050565b61085a3383610ad5565b6108cc5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104c8565b6108d884848484610e5b565b50505050565b6000818152600260205260409020546060906001600160a01b031661096b5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016104c8565b600061098260408051602081019091526000815290565b905060008151116109a257604051806020016040528060008152506109cd565b806109ac84610ed9565b6040516020016109bd92919061162c565b6040516020818303038152906040525b9392505050565b67016345785d8a0000341015610a2c5760405162461bcd60e51b815260206004820152601260248201527f6465706f736974206e6f7420656e6f756768000000000000000000000000000060448201526064016104c8565b336000908152600660205260409020349055565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610a828261070d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61084c828260405180602001604052806000815250610ff2565b6000818152600260205260408120546001600160a01b0316610b4e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104c8565b6000610b598361070d565b9050806001600160a01b0316846001600160a01b03161480610ba057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610bc45750836001600160a01b0316610bb984610453565b6001600160a01b0316145b949350505050565b826001600160a01b0316610bdf8261070d565b6001600160a01b031614610c5b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104c8565b6001600160a01b038216610cbd5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104c8565b610cc8600082610a40565b6001600160a01b0383166000908152600360205260408120805460019290610cf190849061165b565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d1f908490611672565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610dee5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104c8565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e66848484610bcc565b610e7284848484611070565b6108d85760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104c8565b606081600003610f005750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f2a5780610f1481611613565b9150610f239050600a836116a0565b9150610f04565b60008167ffffffffffffffff811115610f4557610f4561149e565b6040519080825280601f01601f191660200182016040528015610f6f576020820181803683370190505b5090505b8415610bc457610f8460018361165b565b9150610f91600a866116b4565b610f9c906030611672565b60f81b818381518110610fb157610fb16116c8565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610feb600a866116a0565b9450610f73565b610ffc83836111bc565b6110096000848484611070565b6105fd5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104c8565b60006001600160a01b0384163b156111b157604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110b49033908990889088906004016116de565b6020604051808303816000875af19250505080156110ef575060408051601f3d908101601f191682019092526110ec9181019061171a565b60015b611197573d80801561111d576040519150601f19603f3d011682016040523d82523d6000602084013e611122565b606091505b50805160000361118f5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104c8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bc4565b506001949350505050565b6001600160a01b0382166112125760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104c8565b6000818152600260205260409020546001600160a01b0316156112775760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104c8565b6001600160a01b03821660009081526003602052604081208054600192906112a0908490611672565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461132157600080fd5b50565b60006020828403121561133657600080fd5b81356109cd8161130b565b60005b8381101561135c578181015183820152602001611344565b838111156108d85750506000910152565b60008151808452611385816020860160208601611341565b601f01601f19169290920160200192915050565b6020815260006109cd602083018461136d565b6000602082840312156113be57600080fd5b5035919050565b80356001600160a01b03811681146113dc57600080fd5b919050565b600080604083850312156113f457600080fd5b6113fd836113c5565b946020939093013593505050565b60008060006060848603121561142057600080fd5b611429846113c5565b9250611437602085016113c5565b9150604084013590509250925092565b60006020828403121561145957600080fd5b6109cd826113c5565b6000806040838503121561147557600080fd5b61147e836113c5565b91506020830135801515811461149357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156114ca57600080fd5b6114d3856113c5565b93506114e1602086016113c5565b925060408501359150606085013567ffffffffffffffff8082111561150557600080fd5b818701915087601f83011261151957600080fd5b81358181111561152b5761152b61149e565b604051601f8201601f19908116603f011681019083821181831017156115535761155361149e565b816040528281528a602084870101111561156c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156115a357600080fd5b6115ac836113c5565b91506115ba602084016113c5565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036115f757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611625576116256115fd565b5060010190565b6000835161163e818460208801611341565b835190830190611652818360208801611341565b01949350505050565b60008282101561166d5761166d6115fd565b500390565b60008219821115611685576116856115fd565b500190565b634e487b7160e01b600052601260045260246000fd5b6000826116af576116af61168a565b500490565b6000826116c3576116c361168a565b500690565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b03808716835280861660208401525083604083015260806060830152611710608083018461136d565b9695505050505050565b60006020828403121561172c57600080fd5b81516109cd8161130b56fea164736f6c634300080d000a";

type ProblematicNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProblematicNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProblematicNFT__factory extends ContractFactory {
  constructor(...args: ProblematicNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProblematicNFT> {
    return super.deploy(overrides || {}) as Promise<ProblematicNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProblematicNFT {
    return super.attach(address) as ProblematicNFT;
  }
  override connect(signer: Signer): ProblematicNFT__factory {
    return super.connect(signer) as ProblematicNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProblematicNFTInterface {
    return new utils.Interface(_abi) as ProblematicNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProblematicNFT {
    return new Contract(address, _abi, signerOrProvider) as ProblematicNFT;
  }
}
