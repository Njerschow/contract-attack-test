/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PwnNFT,
  PwnNFTInterface,
} from "../../../contracts/pwnNFTMint.sol/PwnNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_problematicNFTAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "gimmeEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "problematicNFT",
    outputs: [
      {
        internalType: "contract ProblematicNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pwnNFTMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161047238038061047283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6103df806100936000396000f3fe60806040526004361061003f5760003560e01c806315009a7a14610041578063150b7a0214610049578063c4bc08a31461009f578063daa72415146100d7575b005b61003f6100ec565b34801561005557600080fd5b506100696100643660046102f6565b61020b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b3480156100ab57600080fd5b506000546100bf906001600160a01b031681565b6040516001600160a01b039091168152602001610096565b3480156100e357600080fd5b5061003f610295565b67016345785d8a00003410156101485760405162461bcd60e51b815260206004820152601860248201527f676f747461206465706f736974206d6f72652066756e64730000000000000000604482015260640160405180910390fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561019657600080fd5b505af11580156101aa573d6000803e3d6000fd5b50506000805460408051631249c58b60e01b815290516001600160a01b039092169550631249c58b9450600480820194509082900301818387803b1580156101f157600080fd5b505af1158015610205573d6000803e3d6000fd5b50505050565b6000805467016345785d89ffff6001600160a01b03909116311115610284576000805460408051631249c58b60e01b815290516001600160a01b0390921692631249c58b9260048084019382900301818387803b15801561026b57600080fd5b505af115801561027f573d6000803e3d6000fd5b505050505b50630a85bd0160e11b949350505050565b60405133904780156108fc02916000818181858888f193505050501580156102c1573d6000803e3d6000fd5b50565b80356001600160a01b03811681146102db57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561030c57600080fd5b610315856102c4565b9350610323602086016102c4565b925060408501359150606085013567ffffffffffffffff8082111561034757600080fd5b818701915087601f83011261035b57600080fd5b81358181111561036d5761036d6102e0565b604051601f8201601f19908116603f01168101908382118183101715610395576103956102e0565b816040528281528a60208487010111156103ae57600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea164736f6c634300080d000a";

type PwnNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PwnNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PwnNFT__factory extends ContractFactory {
  constructor(...args: PwnNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _problematicNFTAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PwnNFT> {
    return super.deploy(
      _problematicNFTAddress,
      overrides || {}
    ) as Promise<PwnNFT>;
  }
  override getDeployTransaction(
    _problematicNFTAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_problematicNFTAddress, overrides || {});
  }
  override attach(address: string): PwnNFT {
    return super.attach(address) as PwnNFT;
  }
  override connect(signer: Signer): PwnNFT__factory {
    return super.connect(signer) as PwnNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PwnNFTInterface {
    return new utils.Interface(_abi) as PwnNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PwnNFT {
    return new Contract(address, _abi, signerOrProvider) as PwnNFT;
  }
}
